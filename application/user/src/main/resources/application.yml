server:
  port: 8081
  domain: http://localhost:8081

file:
  upload:
    image:
      max-file-size: 20971520  # 20MB
      allowed-extensions: png,jpg,jpeg,gif,bmp,webp
    video:
      max-file-size: 524288000  # 500MB
      allowed-extensions: mp4,mov,avi,mkv,wmv,flv

spring:
  profiles:
    active: local  # 기본 활성 프로파일
  application:
    name: user
  config:
    import:
      - application-user-service.yml
      - application-core.yml
      - application-common.yml
      - application-domain-cache.yml
      - application-domain-storage.yml
  thymeleaf:
    cache: false
  servlet:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB

--- # local
spring.config.activate.on-profile: local
file:
  upload:
    path: "C:/damso/uploads"
  access:
    path: "/uploads"
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 844554796460-s7btovt5g6pbtf2btd4pvslnu7cqacdm.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email

--- # product
spring.config.activate.on-profile: product
file:
  upload:
    path: "/var/uploads"
  access:
    path: "/uploads"
spring:
  thymeleaf:
    cache: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: YOUR_GOOGLE_CLIENT_ID
            client-secret: YOUR_GOOGLE_CLIENT_SECRET
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
          x:
            client-id: YOUR_X_CLIENT_ID
            client-secret: YOUR_X_CLIENT_SECRET
            scope:
              - tweet.read
                - users.read
            redirect-uri: "{baseUrl}/login/oauth2/code/x"
          instagram:
            client-id: YOUR_INSTAGRAM_CLIENT_ID
            client-secret: YOUR_INSTAGRAM_CLIENT_SECRET
            scope:
              - user_profile
              - user_media
            redirect-uri: "{baseUrl}/login/oauth2/code/instagram"
          naver:
            client-id: YOUR_NAVER_CLIENT_ID
            client-secret: YOUR_NAVER_CLIENT_SECRET
            scope:
              - name
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email
          x:
            authorization-uri: https://twitter.com/i/oauth2/authorize
            token-uri: https://api.twitter.com/oauth2/token
            user-info-uri: https://api.twitter.com/2/me
            user-name-attribute: email
          instagram:
            authorization-uri: https://api.instagram.com/oauth/authorize
            token-uri: https://api.instagram.com/oauth/access_token
            user-info-uri: https://graph.instagram.com/me
            user-name-attribute: email
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response.email
